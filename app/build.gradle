/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
    id "org.sonarqube" version "5.1.0.4882"
    // For generate doc
    id 'org.asciidoctor.jvm.convert' version '4.0.2'
    id 'org.asciidoctor.jvm.pdf' version '4.0.2'
}

asciidoctor {
    sourceDir = file('src/docs/asciidoc')
    outputDir = file("${buildDir}/docs/asciidoc")
}

asciidoctorPdf {
    sourceDir = file('src/docs/asciidoc')
    outputDir = file("${buildDir}/docs/asciidoc")
}

asciidoctorj {
    requires 'rouge'
    modules {
        diagram.use()
        diagram.version '1.5.16'
    }
    attributes 'build-gradle': file('build.gradle'),
            'sourcedir': project.sourceSets.main.java.srcDirs[0],
            'source-highlighter': 'rouge',
            'rouge-style': 'github',
            'rouge-theme': 'github'

}

sonar {
    properties {
        property "sonar.projectKey", "DaJaime_BackendApp"
        property "sonar.organization", "dajaime-github"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jacoco {
    toolVersion = "0.8.12" // JaCoCo version
}

jacocoTestReport {
    reports {
        xml.required.set(true) // Necessary for badge services to read reports
        html.required.set(true)
    }
}

test {
    finalizedBy jacocoTestReport // Generates JaCoCo report after testing
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:3.3.3'
    // Use JUnit test framework.
    testImplementation libs.junit
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.3'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

group = 'fr.parisnanterre.orga'  // Group ID
version = '0.0.1'  // Version
application {
    // Define the main class for the application.
    mainClass = 'fr.parisnanterre.orga.backend.App'
}

// edit the build task to generate the asciidoc pdf too
tasks.named('asciidoctor').configure {
    dependsOn tasks.named('asciidoctorPdf')
}

tasks.named('build').configure {
    dependsOn tasks.named('asciidoctor')
}






